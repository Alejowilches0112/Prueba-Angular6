{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/payment/payment.component.css","webpack:///./src/app/components/payment/payment.component.html","webpack:///./src/app/components/payment/payment.component.ts","webpack:///./src/app/components/settlement/settlement.component.css","webpack:///./src/app/components/settlement/settlement.component.html","webpack:///./src/app/components/settlement/settlement.component.ts","webpack:///./src/app/services/payment.service.ts","webpack:///./src/app/servicessettlement/settlement.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\n\n//modules\nimport { PaymentComponent } from './components/payment/payment.component';\nimport { SettlementComponent } from './components/settlement/settlement.component';\n\nconst routes: Routes =[\n  {path: '', redirectTo: '/payment', pathMatch: 'full'},\n  {path: 'payment', component:PaymentComponent},\n  {path: 'settlement', component:SettlementComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\n\nexport class AppRoutingModule { }\n","module.exports = \"h1 {\\r\\n  color: blue;\\r\\n  font-family: Arial,Helvetica, sans-serif;\\r\\n  font-size: 250%\\r\\n}\\r\\n\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div  class=\\\"container\\\" style=\\\"text-align:center\\\">\\n  <h1>\\n    {{ title }}\\n  </h1>\\n\\n  <div class=\\\"row\\\">\\n    <img width=\\\"300\\\" alt=\\\"Angular Logo\\\" src=\\\"corporativo.jpg\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Listado de nomina';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { PaymentService } from './services/payment.service'\nimport { AppComponent } from './app.component';\nimport { PaymentComponent } from './components/payment/payment.component';\nimport { SettlementComponent } from './components/settlement/settlement.component';\nimport { AppRoutingModule } from './/app-routing.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PaymentComponent,\n    SettlementComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule\n  ],\n  providers: [PaymentService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <form (submit)=\\\"addPayment($event)\\\">\\n      <div class=\\\"input-group\\\">\\n          <div>\\n            <input type=\\\"number\\\" name=\\\"cedula\\\" [(ngModel)]=\\\"cedula\\\" placeholder=\\\"cedula\\\" class=\\\"form-control\\\">\\n          </div>\\n          <div>\\n            <input type=\\\"text\\\" name=\\\"nombres\\\" [(ngModel)]=\\\"nombres\\\" placeholder=\\\"nombre\\\" class=\\\"form-control\\\">\\n          </div>\\n          <div>\\n            <input type=\\\"text\\\" name=\\\"apellidos\\\" [(ngModel)]=\\\"apellidos\\\" placeholder=\\\"apellido\\\" class=\\\"form-control\\\">\\n          </div>\\n          <div>\\n            <input type=\\\"text\\\" name=\\\"contrato\\\" [(ngModel)]=\\\"contrato\\\" placeholder=\\\"número de contrato\\\" class=\\\"form-control\\\">\\n          </div>\\n          <div>\\n            <input type=\\\"number\\\" name=\\\"salario\\\" [(ngModel)]=\\\"salario\\\" placeholder=\\\"salario\\\" class=\\\"form-control\\\">\\n          </div>\\n          <br>\\n          <br>\\n          <div>\\n          <span class=\\\"input-group-addon\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\n              Add employee\\n            </button>\\n          </span>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\\n\\n<table class=\\\"table\\\">\\n  <thead>\\n    <th> Contrato </th>\\n    <th> Cédula </th>\\n    <th> Nombres </th>\\n    <th> Apellidos </th>\\n    <th> Salario </th>\\n    <th> Eliminar </th>\\n    <th> Pagar </th>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let payment of payments\\\">\\n      <td>\\n        {{payment.contrato}}\\n      </td>\\n      <td>\\n        {{payment.cedula}}\\n      </td>\\n      <td>\\n        {{payment.nombres}}\\n      </td>\\n      <td>\\n        {{payment.apellidos}}\\n      </td>\\n      <td>\\n        {{payment.salario}}\\n      </td>\\n      <td>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deletePayment(payment._id)\\\">\\n            <i class=\\\"fa fa-trash\\\"></i>\\n        </button>\\n      </td>\\n      <td>\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"btnClick()\\\" >\\n            <i class=\\\"fa fa-usd\\\"></i>\\n        </button>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { PaymentService } from '../../services/payment.service'\nimport { Payment } from '../../Payment';\n\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.css'],\n  providers: [PaymentService]\n})\n\nexport class PaymentComponent implements OnInit {\n\n  payments : Payment[];\n\n  cedula: number;\n  nombres: string;\n  apellidos: string;\n  contrato: string;\n  salario: number;\n\n  constructor( private paymentService: PaymentService\n  , private router: Router) {\n      this.paymentService.getPayment().subscribe(res => {\n        this.payments = res\n      });\n  }\n\n  ngOnInit() {\n  }\n\n  addPayment(event){\n    event.preventDefault();\n\n    const newPayment : Payment = {\n      cedula: this.cedula,\n      nombres: this.nombres,\n      apellidos: this.apellidos,\n      contrato: this.contrato,\n      salario: this.salario\n    };\n    this.paymentService.addPayment(newPayment)\n    .subscribe(payment => {\n       this.payments.push(payment);\n       this.cedula = 0;\n       this.nombres ='';\n       this.apellidos ='';\n       this.contrato = 'N° ';\n       this.salario = 0;\n    });\n  }\n\n  deletePayment(id){\n    const response = confirm('are you sure to delete it?');\n    if (response){\n        const payments = this.payments;\n        this.paymentService.deletePayment(id)\n        .subscribe (data => {\n          if(data.n == 1){\n            for(let i = 0; i < payments.length; i++){\n              if(payments[i]._id == id){\n                payments.splice(i, 1);\n              }\n            }\n          }\n        });\n    }\n  }\n\n\n  btnClick= function () {\n    this.router.navigate(['/settlement']);\n };\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <form (submit)=\\\"addSettlement($event)\\\">\\n      <div class=\\\"input-group\\\">\\n        <div>\\n          <input type=\\\"text\\\"name=\\\"cedula\\\" [(ngModel)]=\\\"cedula\\\" placeholder=\\\"cedula\\\" class=\\\"form-control\\\">\\n        </div>\\n          <div>\\n            <input type=\\\"date\\\" name=\\\"fecha_inicial\\\" [(ngModel)]=\\\"fecha_inicial\\\" placeholder=\\\"fecha_inicial\\\" class=\\\"form-control\\\">\\n          </div>\\n          <div>\\n            <input type=\\\"date\\\" name=\\\"fecha_final\\\" [(ngModel)]=\\\"fecha_final\\\" placeholder=\\\"fecha_final\\\" class=\\\"form-control\\\">\\n          </div>\\n          <div>\\n            <input type=\\\"number\\\" id=\\\"bonificacion\\\"name=\\\"bonificacion\\\" value=\\\"bonificacion\\\" [(ngModel)]=\\\"bonificacion\\\" placeholder=\\\"bonificacion\\\" class=\\\"form-control\\\">\\n          </div>\\n          <br>\\n          <br>\\n          <div>\\n          <span class=\\\"input-group-addon\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\n              Add settlement\\n            </button>\\n          </span>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\\n\\n<table class=\\\"table\\\">\\n  <thead>\\n    <th> Cédula </th>\\n    <th> Fecha Inicial </th>\\n    <th> Fecha Final </th>\\n    <th> Bonificacion </th>\\n    <th> Borrar </th>\\n    <th> Exportar PDF </th>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let settlement of settlements\\\">\\n      <td>\\n        {{settlement.cedula}}\\n      </td>\\n      <td>\\n        {{settlement.fecha_inicial}}\\n      </td>\\n      <td>\\n        {{settlement.fecha_final}}\\n      </td>\\n      <td>\\n        {{settlement.bonificacion}}\\n      </td>\\n      <td>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteSettlement(settlement._id)\\\">\\n            <i class=\\\"fa fa-trash\\\"></i>\\n        </button>\\n      </td>\\n      <td>\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"btnClick()\\\">\\n            <i class=\\\"fa fa-file\\\"></i>\\n        </button>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n\\n\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"btnClick1()\\\">\\n      Empleados\\n  </button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { SettlementService } from '../../servicessettlement/settlement.service';\nimport { Settlement } from '../../Settlement';\n\n@Component({\n  selector: 'app-settlement',\n  templateUrl: './settlement.component.html',\n  styleUrls: ['./settlement.component.css'],\n  providers:[SettlementService]\n})\n\nexport class SettlementComponent implements OnInit {\n  settlements : Settlement[];\n\n  cedula: number;\n  fecha_inicial: string;\n  fecha_final: string;\n  bonificacion: number;\n\n  constructor(private settlementService: SettlementService\n  , private router: Router) {\n    this.settlementService.getSettlement().subscribe(res => {\n      this.settlements = res\n    });\n  }\n\n  ngOnInit() {\n  }\n  addSettlement(event){\n    event.preventDefault();\n    const newSettlement: Settlement ={\n      cedula: this.cedula,\n      fecha_inicial: this.fecha_inicial,\n      fecha_final: this.fecha_final,\n      bonificacion: 3000000*(this.bonificacion/100)\n\n    };\n\n    this.settlementService.addSettlement(newSettlement)\n    .subscribe(settlement => {\n      this.settlements.push(settlement);\n      this.cedula=0;\n      this.fecha_inicial=\"\";\n      this.fecha_final=\"\";\n      this.bonificacion=0;\n    });\n  }\n  deleteSettlement(id){\n    const response = confirm('are you sure to delete it?');\n    if (response){\n        const settlements = this.settlements;\n        this.settlementService.deleteSettlement(id)\n        .subscribe (data => {\n          if(data.n == 1){\n            for(let i = 0; i < settlements.length; i++){\n              if(settlements[i]._id == id){\n                settlements.splice(i, 1);\n              }\n            }\n          }\n        });\n    }\n  }\n\n  btnClick= function () {\n    //Escribir PDF\n  };\n\n  btnClick1= function () {\n    this.router.navigate(['/payment']);\n  };\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport 'rxjs/Rx';\nimport { Payment } from '../Payment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentService {\n\n  domain : string = \"http://localhost:3000\";\n  constructor(private http: HttpClient) { }\n\n  getPayment(){\n    return this.http.get<Payment[]>(`${this.domain}/api/payment`)\n    .map(res => res);\n  }\n\n  addPayment(newPayment: Payment){\n    return this.http.post<Payment>(`${this.domain}/api/payment`, newPayment)\n    .map(res => res);\n  }\n\n  editPayment(newPayment){\n    return this.http.put<Payment>(`${this.domain}/api/payment/${newPayment._id}`,\n      newPayment).map(res => res);\n  }\n\n  deletePayment(id){\n    return this.http.delete<Payment>(`${this.domain}/api/payment/${id}`)\n    .map(res => res);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport 'rxjs/Rx';\nimport { Settlement } from '../Settlement';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettlementService {\n  domain : string = \"http://localhost:3000\";\n\n  constructor(private http: HttpClient) { }\n\n    getSettlement(){\n      return this.http.get<Settlement[]>(`${this.domain}/api/settlement`)\n      .map(res => res);\n    }\n\n    addSettlement(newSettlement: Settlement){\n      return this.http.post<Settlement>(`${this.domain}/api/settlement`,newSettlement)\n      .map(res => res);\n    }\n\n    deleteSettlement(id){\n      return this.http.delete<Settlement>(`${this.domain}/api/settlement/${id}`)\n      .map(res => res);\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}